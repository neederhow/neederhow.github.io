<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>给自己的备忘录</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-09T15:13:45.184Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Decret Ni</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu杂记</title>
    <link href="http://yoursite.com/2018/07/09/ubuntu-jottings/"/>
    <id>http://yoursite.com/2018/07/09/ubuntu-jottings/</id>
    <published>2018-07-09T13:51:17.000Z</published>
    <updated>2018-07-09T15:13:45.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pre"><a href="#pre" class="headerlink" title="pre"></a>pre</h2><blockquote><p>基于Ubuntu记一些关于Linux使用的内容<br><a id="more"></a></p></blockquote><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="文件与目录"><a href="#文件与目录" class="headerlink" title="文件与目录"></a>文件与目录</h2><h3 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h3><p>chmod命令用来变更文件或目录的权限。</p><p>权限范围的表示法如下：</p><p><code>u</code> User，即文件或目录的拥有者；<br><code>g</code> Group，即文件或目录的所属群组；<br><code>o</code> Other，除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围；<br><code>a</code> All，即全部的用户，包含拥有者，所属群组以及其他用户；<br><code>r</code> 读取权限，数字代号为“4”;<br><code>w</code> 写入权限，数字代号为“2”；<br><code>x</code> 执行或切换权限，数字代号为“1”；<br><code>-</code> 不具任何权限，数字代号为“0”；<br><code>s</code> 特殊功能说明：变更文件或目录的权限。</p><p><strong>语法</strong><br><code>chmod (选项)(参数)</code></p><p><strong>选项</strong></p><blockquote><p>-c或–changes：效果类似“-v”参数，但仅回报更改的部分；<br>-f或–quiet或–silent：不显示错误信息；<br>-R或–recursive：递归处理，将指令目录下的所有文件及子目录一并处理；<br>-v或–verbose：显示指令执行过程；<br>–reference=&lt;参考文件或目录&gt;：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；<br>&lt;权限范围&gt;+&lt;权限设置&gt;：开启权限范围的文件或目录的该选项权限设置；<br>&lt;权限范围&gt;-&lt;权限设置&gt;：关闭权限范围的文件或目录的该选项权限设置；<br>&lt;权限范围&gt;=&lt;权限设置&gt;：指定权限范围的文件或目录的该选项权限设置；</p></blockquote><p><strong>参数</strong></p><blockquote><p>权限模式：指定文件的权限模式；<br>文件：要改变权限的文件。</p></blockquote><p><strong>知识扩展和实例</strong></p><blockquote><p>Linux用 户分为：拥有者、组群(Group)、其他（other），Linux系统中，预设的情況下，系统中&gt;所有的帐号与一般身份使用者，以及root的相关信 息， 都是记录在/etc/passwd文件中。每个人的密码则是记录在/etc/shadow文件下。 此外，所有的组群名称记录在/etc/group內！</p></blockquote><p><strong>举个栗子</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--  1 owner group 8.8K 4月   2  2017 examples</span><br><span class="line">drwxrwxr-x  3 owner group 4.0K 5月  15  2017 examplesDirectory</span><br><span class="line">~ chmod -c u+x examples</span><br><span class="line">mode of &apos;examples&apos; changed from 0644 (rw-r--r--) to 0744 (rwxr--r--)</span><br></pre></td></tr></table></figure></p><p><strong>解释</strong><br>上面修改了examples的拥有者权限,增加了执行权限<br><code>-</code>普通文件(目录为<code>d</code>)<code>rw-</code>文件拥有者u的权限<code>r--</code>所属组g的权限<code>r--</code>拥有者及所在组之外的o的权限  <code>1</code>文件数 <code>owner</code>文件拥有者 <code>group</code>所属组 <code>8.8K</code>大小 <code>4月   2  2017</code>最后修改时间 <code>examples</code>文件名<br><code>chmod</code>命令 <code>-c</code>选项: 显示改变的地方 <code>u+x</code>参数 <code>examples</code>目标修改文件</p><hr><h1 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h1><h2 id="IDEA无法更新"><a href="#IDEA无法更新" class="headerlink" title="IDEA无法更新"></a>IDEA无法更新</h2><p>更新时提示<br>IDEA does not have write access to /path/to/idea. Please run it by a privileged user to update<br>使用下面命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $USER:$USER /opt/path/to/idea</span><br></pre></td></tr></table></figure></p><p>把目录的与拥有者改为当前用户</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;pre&quot;&gt;&lt;a href=&quot;#pre&quot; class=&quot;headerlink&quot; title=&quot;pre&quot;&gt;&lt;/a&gt;pre&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;基于Ubuntu记一些关于Linux使用的内容&lt;br&gt;
    
    </summary>
    
      <category term="备忘" scheme="http://yoursite.com/categories/%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>系统总线</title>
    <link href="http://yoursite.com/2017/12/27/%E7%B3%BB%E7%BB%9F%E6%80%BB%E7%BA%BF/"/>
    <id>http://yoursite.com/2017/12/27/系统总线/</id>
    <published>2017-12-27T07:32:12.000Z</published>
    <updated>2018-07-09T14:00:22.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pre"><a href="#pre" class="headerlink" title="pre"></a>pre</h2><blockquote></blockquote><a id="more"></a><h1 id="3-1总线的基本概念"><a href="#3-1总线的基本概念" class="headerlink" title="3.1总线的基本概念"></a>3.1总线的基本概念</h1><h2 id="一、为什么用总线"><a href="#一、为什么用总线" class="headerlink" title="一、为什么用总线"></a>一、为什么用总线</h2><h2 id="二、什么是总线"><a href="#二、什么是总线" class="headerlink" title="二、什么是总线"></a>二、什么是总线</h2><p>总线是连接各个部件的信息传输线，是<strong>各个部件共享的传输介质</strong></p><h2 id="三、总线上的信息传送"><a href="#三、总线上的信息传送" class="headerlink" title="三、总线上的信息传送"></a>三、总线上的信息传送</h2><h4 id="串行"><a href="#串行" class="headerlink" title="串行"></a>串行</h4><p><img src="/images/3-1系统总线/string.png" alt=""></p><blockquote><p>发送方一次传一位,接收方一次收一位,可用于远距离数据传输。</p></blockquote><h4 id="并行"><a href="#并行" class="headerlink" title="并行"></a>并行</h4><p><img src="/images/3-1系统总线/parallel.png" alt=""></p><blockquote><p>发送方一次传多位,接收方一次收多位,需要多条数据线,由于数据线平行向外,若传输距离过长,数据线间会彼此干扰,故并行传输用于短距离传输数据(机箱内)。</p></blockquote><h2 id="四、总线结构计算机举例"><a href="#四、总线结构计算机举例" class="headerlink" title="四、总线结构计算机举例"></a>四、总线结构计算机举例</h2><h3 id="1-单总线结构框图"><a href="#1-单总线结构框图" class="headerlink" title="1.单总线结构框图"></a>1.单总线结构框图</h3><p><img src="/images/3-1系统总线/singleBus.png" alt=""></p><blockquote><p>缺点：由于同一时间只能有一对设备使用总线</p><ul><li>当I/O设备与主存间传输信息时,CPU将停止</li><li>当设备较多时,与远端设备通讯延迟大</li></ul></blockquote><h3 id="2-面向CPU的双总线机构框图"><a href="#2-面向CPU的双总线机构框图" class="headerlink" title="2.面向CPU的双总线机构框图"></a>2.面向CPU的双总线机构框图</h3><p><img src="/images/3-1系统总线/CPU_doubleBus.png" alt=""></p><blockquote><p>解决单总线的缺点<br>缺点:</p><ul><li>主存与外部设备通信需经过CPU,依然打断CPU的工作</li></ul></blockquote><h3 id="3-以存储器为中心的双总线结构框图"><a href="#3-以存储器为中心的双总线结构框图" class="headerlink" title="3.以存储器为中心的双总线结构框图"></a>3.以存储器为中心的双总线结构框图</h3><p><img src="/images/3-1系统总线/M_doubleBus.png" alt=""></p><h1 id="3-2总线的类型"><a href="#3-2总线的类型" class="headerlink" title="3.2总线的类型"></a>3.2总线的类型</h1><h3 id="1-片内总线"><a href="#1-片内总线" class="headerlink" title="1.片内总线"></a>1.片内总线</h3><p><strong>芯片内部</strong>的总线</p><h3 id="2-系统总线"><a href="#2-系统总线" class="headerlink" title="2.系统总线"></a>2.系统总线</h3><p><strong>计算机各部件之间</strong>的信息传输线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;cases&#125;</span><br><span class="line">\text&#123;数据总线&#125;&amp;</span><br><span class="line">\text&#123;传输数据,&#123;\bf&#123;双向&#125;&#125; 与机器字长、存储字长有关(小于或等于)&#125;\\\\</span><br><span class="line">\text&#123;地址总线&#125;&amp;</span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">\text&#123;由CPU或主设备发出&#125;\\\\</span><br><span class="line">\text&#123;&#123;\bf&#123;单向&#125;&#125; 与存储地址、I/O地址有关&#125;</span><br><span class="line">\end&#123;cases&#125;\\\\</span><br><span class="line">\text&#123;控制总线&#125;&amp;</span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">\text&#123;&#123;\bf&#123;有出&#125;&#125;(存储器读操作、写控制、总线允许、中断确认)&#125;\\\\</span><br><span class="line">\text&#123;&#123;\bf&#123;有入&#125;&#125;(中断请求、总线请求)&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br></pre></td></tr></table></figure><h3 id="3-通信总线"><a href="#3-通信总线" class="headerlink" title="3.通信总线"></a>3.通信总线</h3><p>用于 <strong>计算机系统之间</strong> 或 <strong>计算机系统与其他系统</strong>(如仪表\移动通信)之间的通信</p><blockquote><p><em>传输方式</em></p><ul><li>串行通信总线</li><li>并行通信总线</li></ul></blockquote><h1 id="3-3总线特性及性能指标"><a href="#3-3总线特性及性能指标" class="headerlink" title="3.3总线特性及性能指标"></a>3.3总线特性及性能指标</h1><h2 id="一、总线物理实现"><a href="#一、总线物理实现" class="headerlink" title="一、总线物理实现"></a>一、总线物理实现</h2><p><img src="/images/3-1系统总线/bus_Physic.png" alt=""></p><h2 id="二、总线特性"><a href="#二、总线特性" class="headerlink" title="二、总线特性"></a>二、总线特性</h2><h3 id="1、机械特性"><a href="#1、机械特性" class="headerlink" title="1、机械特性"></a>1、机械特性</h3><p><strong>尺寸</strong>、形状、<strong>管脚数</strong> 及 <strong>排列顺序</strong></p><h3 id="2、电气特性"><a href="#2、电气特性" class="headerlink" title="2、电气特性"></a>2、电气特性</h3><p><strong>传输方向</strong> 和有效的 <strong>电平</strong> 范围</p><h3 id="3、功能特性"><a href="#3、功能特性" class="headerlink" title="3、功能特性"></a>3、功能特性</h3><p>每根传输线的<strong>功能</strong></p><blockquote><ul><li>地址</li><li>数据</li><li>控制</li></ul></blockquote><h3 id="4、时间特性"><a href="#4、时间特性" class="headerlink" title="4、时间特性"></a>4、时间特性</h3><p>信号的<strong>时序</strong>关系</p><h2 id="三、总线的性能指标"><a href="#三、总线的性能指标" class="headerlink" title="三、总线的性能指标"></a>三、总线的性能指标</h2><h3 id="1、总线宽度"><a href="#1、总线宽度" class="headerlink" title="1、总线宽度"></a>1、总线宽度</h3><p><strong>数据线</strong> 的根数</p><h3 id="2、标准传输率"><a href="#2、标准传输率" class="headerlink" title="2、标准传输率"></a>2、标准传输率</h3><p>每秒传输的最大字节数(<strong>MBps</strong>)</p><h3 id="3、时钟同步-异步"><a href="#3、时钟同步-异步" class="headerlink" title="3、时钟同步/异步"></a>3、时钟同步/异步</h3><h3 id="4、总线复用"><a href="#4、总线复用" class="headerlink" title="4、总线复用"></a>4、总线复用</h3><p><strong>地址线</strong> 与 <strong>数据线</strong>复用</p><h3 id="5、信号线数"><a href="#5、信号线数" class="headerlink" title="5、信号线数"></a>5、信号线数</h3><p>地址线、数据线和控制线的<strong>总和</strong></p><h3 id="6、总线控制方式"><a href="#6、总线控制方式" class="headerlink" title="6、总线控制方式"></a>6、总线控制方式</h3><p>突发、自动、仲裁、逻辑、计数</p><h3 id="7、其他指标"><a href="#7、其他指标" class="headerlink" title="7、其他指标"></a>7、其他指标</h3><p><strong>负载能力</strong></p><h2 id="四、总线的标准"><a href="#四、总线的标准" class="headerlink" title="四、总线的标准"></a>四、总线的标准</h2><p><img src="/images/3-1系统总线/standard.png" alt=""><br>|   系统标准   |      数据线      |   总线时钟(MHz) |    带宽(MBpz)    |<br>|:———-:|:—————:|:—————:|:—————-:|<br>|   ISA(工业标准体系结构)  |  16  |   8(独立)      |   16          |<br>|     EISA     |        32    |    8(独立)    |     33         |<br>| VESA(VL-BUS)视频标准电子协会 |  32  |  32(CPU) |  132        |<br>| PCI(外设部件互联标准) | 32/64 | 33(独立) / 66(独立) |  132 / 528   |<br>|     AGP      |   32   | 66.7(独立) / 133(独立)  |  266 / 533   |<br>| RS-232(串行通信总线) | 串行通信总线标准 | 数据终端设备(计算机)和数据通信设备(调制解调器)之间的标准接口 |                                    |<br>| USB(通用串行总线) | 串行通信总线标准 | 普通无屏蔽双绞线 / 带屏蔽双绞线 | 1.5(USB1.0) / 12(USB2.0) / 480(USB2.0) |</p><h1 id="3-4总线结构"><a href="#3-4总线结构" class="headerlink" title="3.4总线结构"></a>3.4总线结构</h1><h2 id="一、单总线结构"><a href="#一、单总线结构" class="headerlink" title="一、单总线结构"></a>一、单总线结构</h2><p><img src="/images/3-1系统总线/singleBus.png" alt=""></p><h2 id="二、多总线结构"><a href="#二、多总线结构" class="headerlink" title="二、多总线结构"></a>二、多总线结构</h2><h3 id="1、双总线结构"><a href="#1、双总线结构" class="headerlink" title="1、双总线结构"></a>1、双总线结构</h3><p><img src="/images/3-1系统总线/doubleBus.png" alt=""></p><h3 id="2、三总线结构"><a href="#2、三总线结构" class="headerlink" title="2、三总线结构"></a>2、三总线结构</h3><p><img src="/images/3-1系统总线/tripoBus.png" alt=""></p><blockquote><p>DMA:直接存储器访问</p></blockquote><h3 id="3、另一种三总线结构"><a href="#3、另一种三总线结构" class="headerlink" title="3、另一种三总线结构"></a>3、另一种三总线结构</h3><p><img src="/images/3-1系统总线/tripoBus_2.png" alt=""></p><h3 id="4、四总线结构"><a href="#4、四总线结构" class="headerlink" title="4、四总线结构"></a>4、四总线结构</h3><p><img src="/images/3-1系统总线/fourBus_2.png" alt=""></p><h2 id="三、总线结构举例"><a href="#三、总线结构举例" class="headerlink" title="三、总线结构举例"></a>三、总线结构举例</h2><h3 id="1、传统微型机总线结构"><a href="#1、传统微型机总线结构" class="headerlink" title="1、传统微型机总线结构"></a>1、传统微型机总线结构</h3><p><img src="/images/3-1系统总线/traditong_microMechine_bus.png" alt=""></p><h3 id="2、VL-BUS局部总线结构"><a href="#2、VL-BUS局部总线结构" class="headerlink" title="2、VL-BUS局部总线结构"></a>2、VL-BUS局部总线结构</h3><p><img src="/images/3-1系统总线/vl-bus.png" alt=""></p><h3 id="3、PCI总线结构"><a href="#3、PCI总线结构" class="headerlink" title="3、PCI总线结构"></a>3、PCI总线结构</h3><p><img src="/images/3-1系统总线/pci_bus.png" alt=""></p><h1 id="3-5总线控制"><a href="#3-5总线控制" class="headerlink" title="3.5总线控制"></a>3.5总线控制</h1><h2 id="一、总线判优控制"><a href="#一、总线判优控制" class="headerlink" title="一、总线判优控制"></a>一、总线判优控制</h2><h3 id="1、基本概念"><a href="#1、基本概念" class="headerlink" title="1、基本概念"></a>1、基本概念</h3><ul><li>主设备(模块)——对总线有<strong>控制权</strong></li><li>从设备(模块)——<strong>响应</strong>从主设备发来的总线命令</li><li>总线判优控制<blockquote><p>集中式</p><ul><li>总线控制部件集中在一起<blockquote><p>链式查询<br>计数器定时查询<br>独立请求查询</p></blockquote></li></ul><p>分布式</p></blockquote><h3 id="2、链式查询"><a href="#2、链式查询" class="headerlink" title="2、链式查询"></a>2、链式查询</h3><img src="/images/3-1系统总线/chain_query.png" alt=""><br>数据线：信息交换过程中数据的传输<br>地址线：主设备占用总线后通过地址总线找到从设备<br>BR(BusRequest总线请求)：所有设备通过这条线发出总线占用、总线使用的请求<br>BS(BusState总线状态)：如果有设备占用了总线则通过这条线通知控制部件<br>BG(BusGrant总线响应)：这是这种控制方式成为链式查询的原因，用于查询是哪个接口提出总线请求<h4 id="判优过程"><a href="#判优过程" class="headerlink" title="判优过程"></a>判优过程</h4><img src="/images/3-1系统总线/chain_query_1.png" alt=""><br>当IO接口通过BR发送总线请求后，BG线一个一个向下进行查询是哪个接口发送的IO请求，并将使用权交给第一个查询到的第一个接口；然后该接口通过BS设置总线忙，至此，接口获得总线使用权<blockquote><p><strong>特点:</strong></p><ul><li>结构简单<blockquote><ul><li>只有三条线用于控制、仲裁</li><li>增删设备简单</li><li>优先级算法简单</li><li>进行可靠性设计的时候比较容易实现</li></ul></blockquote></li><li>优先级取决于连接方法，事先决定，优先级越高越靠前</li><li>对电路故障敏感</li></ul></blockquote><h3 id="3、计数器定时查询"><a href="#3、计数器定时查询" class="headerlink" title="3、计数器定时查询"></a>3、计数器定时查询</h3><img src="/images/3-1系统总线/couter_timing_query.png" alt=""><br>设备地址线：名称来源，线上地址由计数器给出<h4 id="判优过程-1"><a href="#判优过程-1" class="headerlink" title="判优过程"></a>判优过程</h4><img src="/images/3-1系统总线/couter_timing_query_1.png" alt=""><br>总线控制部件中有个<strong>计数器</strong>，它被赋有一个初值。<br>设备通过BR发出请求，若总线处于空闲状态则启动计数器。<br>计数器的值通过设备地址线发出，假设初值为0，则对接口0进行查询，若非接口0发出的请求这计数器值加一，查询接口1，依次查询。<br>若找到发出请求的接口，则该接口通过BS应答。<blockquote><p><strong>特点：</strong></p><ul><li>优先级灵活(由计数器初值决定)</li><li>较链式查询少了BG线多了设备地址线，他的宽度跟设备数有关,有n个设备，就需要$\log_2n$(向上取整)条线，即该方式共有$4+\log_2n$(向上取整)条线</li></ul></blockquote></li></ul><h3 id="4、独立请求查询"><a href="#4、独立请求查询" class="headerlink" title="4、独立请求查询"></a>4、独立请求查询</h3><p>前两种方法查找设备优先级是按顺序查找，速度慢<br><img src="/images/3-1系统总线/independent_request_query.png" alt=""><br>若有n个设备则有$2+2n$</p><h4 id="判优过程-2"><a href="#判优过程-2" class="headerlink" title="判优过程"></a>判优过程</h4><p><img src="/images/3-1系统总线/independent_request_query_1.png" alt=""><br>每个IO接口有各自独立的BR和BG线，总线控制部件内置<strong>排队器</strong>对设备进行优先及排列。<br>当多个设备通过各自的BR线将请求发动到总线控制部件后，排队器按照逻辑对请求进行排队，并给予其中一个设备响应</p><h2 id="二、总线通信控制"><a href="#二、总线通信控制" class="headerlink" title="二、总线通信控制"></a>二、总线通信控制</h2><h3 id="1、目的"><a href="#1、目的" class="headerlink" title="1、目的"></a>1、目的</h3><p>解决通信双方<strong>协调配合</strong>为题</p><h3 id="2、总线传输周期"><a href="#2、总线传输周期" class="headerlink" title="2、总线传输周期"></a>2、总线传输周期</h3><blockquote><ul><li>申请分配阶段<blockquote><p><strong>主模块申请</strong>，总线仲裁决定</p></blockquote></li><li>寻址阶段<blockquote><p>主模块向从模块<strong>给出地址</strong>和<strong>命令</strong></p></blockquote></li><li>传输阶段<blockquote><p>主模块和从模块<strong>交换数据</strong></p></blockquote></li><li>结束阶段<blockquote><p>主从模块<strong>撤销相关信息</strong></p></blockquote></li></ul></blockquote><h3 id="3、总线通信的四种方式"><a href="#3、总线通信的四种方式" class="headerlink" title="3、总线通信的四种方式"></a>3、总线通信的四种方式</h3><blockquote><ul><li>同步通信<blockquote><p>由<strong>统一时标</strong>控制数据传送</p></blockquote></li><li>异步通信<blockquote><p>采用<strong>应答方式</strong>，没用公共时钟标准</p></blockquote></li><li>半同步通信<blockquote><p><strong>同步异步结合</strong>，解决高速设备与低速设备间通信问题</p></blockquote></li><li>分离式通信<blockquote><p>充分挖掘系统总线每个瞬间的价值</p></blockquote></li></ul></blockquote><h4 id="1-同步式数据输入"><a href="#1-同步式数据输入" class="headerlink" title="(1)同步式数据输入"></a>(1)同步式数据输入</h4><p><img src="/images/3-1系统总线/SYNC_in.png" alt=""><br>同步式特点：需要一个定宽定距的时钟信号，在固定的时间做特定的事</p><ul><li>在<strong>T1上升沿</strong>必须给出<strong>地址信号</strong>(主设备给出)</li><li>在<strong>T2上升沿</strong>必须给出<strong>读信号</strong>，告诉从设备CPU将读取数据</li><li>在<strong>T3上升沿</strong>必须给出<strong>数据信号</strong></li><li>在<strong>T4上升沿</strong>数据信号和读信号撤销</li><li>在<strong>T4结束</strong>地址信号撤销<h4 id="2-同步式数据输出"><a href="#2-同步式数据输出" class="headerlink" title="(2)同步式数据输出"></a>(2)同步式数据输出</h4><img src="/images/3-1系统总线/SYNC_out.png" alt=""></li><li>在<strong>T1上升沿</strong>必须给出<strong>地址信号</strong>(主设备给出)</li><li>在<strong>T1下降沿</strong>必须给出<strong>数据</strong></li><li>在<strong>T2上升沿</strong>必须给出<strong>写命令</strong></li><li>在<strong>T3上升沿</strong>在进行写操作</li><li>在<strong>T4上升沿</strong>撤销数据信号和写命令</li><li>在<strong>T4结束</strong>撤销地址信号<br>同步式特点：如果两个设备速度不同，按速度较低的设备的时钟周期进行传输。所以一般用于线路较短(线路太长时延大)，各设备速度比较接近的情况下<h4 id="3-异步通信"><a href="#3-异步通信" class="headerlink" title="(3)异步通信"></a>(3)异步通信</h4>由请求线和应答线组成，利用请求和应答通信<br>通信过程中如果发现设备有异常，可以要求重发<br><img src="/images/3-1系统总线/ASYNC.png" alt=""><h5 id="不互锁-不可靠"><a href="#不互锁-不可靠" class="headerlink" title="不互锁(不可靠)"></a>不互锁(不可靠)</h5>主设备发出请求，从设备接收到请求后作出应答。<br>主设备一段时间后撤销请求(不论是否接收到应答)，从设备一段时间后撤销应答(不管主设备是否接收到应答)。<h5 id="半互锁-请求信号有死锁的可能"><a href="#半互锁-请求信号有死锁的可能" class="headerlink" title="半互锁(请求信号有死锁的可能)"></a>半互锁(请求信号有死锁的可能)</h5>主设备发出请求，从设备接收到请求后作出应答。<br>主设备接收到应答后撤销请求，接收不到就保持。<br>从设备一段时间后撤销应答(不管主设备是否接收到应答)。<h5 id="全互锁"><a href="#全互锁" class="headerlink" title="全互锁"></a>全互锁</h5>主设备发出请求，从设备接收到请求后作出应答。<br>主设备接收到应答后撤销请求，只有主设备撤销以后，从设备才撤销应答信号。<h4 id="4-半同步通信-同步、异步-结合"><a href="#4-半同步通信-同步、异步-结合" class="headerlink" title="(4)半同步通信(同步、异步 结合)"></a>(4)半同步通信(<strong>同步、异步</strong> 结合)</h4><h5 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h5>有一个定长定宽的时钟信号<br><strong>发送方</strong>用系统<strong>时钟前沿</strong>发信号<br><strong>接收方</strong>用系统<strong>时钟后沿</strong>判断、识别<h5 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h5>允许不同速度的模块和谐工作<br>增加一条 <strong>“等待”响应</strong> 信号 $\overline{WAIT}$<h5 id="以输入数据为例的半同步通信时序"><a href="#以输入数据为例的半同步通信时序" class="headerlink" title="以输入数据为例的半同步通信时序"></a>以输入数据为例的半同步通信时序</h5><img src="/images/3-1系统总线/semi_sync.png" alt=""><br>在<strong>T1上升沿</strong>必须给出<strong>地址信号</strong>(主设备给出)<br>在<strong>T2上升沿</strong>必须给出<strong>读命令</strong><br>CPU检测$\overline{WAIT}$信号<br>当$\overline{WAIT}$低电平时，在$T_3$周期到来前插入一个$T_w$周期<br>在进入下一个周期前再次检测$\overline{WAIT}$信号<br>$\cdot$<br>$\cdot$<br>$\cdot$<br>在某个$T_w$周期下降沿检测到$\overline{WAIT}$信号为低电平，$T_3$周期开始<br>在<strong>T3上升沿</strong>在进行读操作<br>在<strong>T4上升沿</strong>撤销读信号、数据信号<br>在<strong>T4结束</strong>撤销地址信号<h4 id="上述三种通信的共同点"><a href="#上述三种通信的共同点" class="headerlink" title="上述三种通信的共同点"></a>上述三种通信的共同点</h4><h5 id="一个总线传输周期-一输入数据为例"><a href="#一个总线传输周期-一输入数据为例" class="headerlink" title="一个总线传输周期(一输入数据为例)"></a>一个总线传输周期(一输入数据为例)</h5></li><li>主模块发地址、命令　<strong>占用总线</strong></li><li>从模块准备数据　<strong>不占用总线</strong>　总线空闲</li><li>从模块向主模块发数据　<strong>占用总线</strong><h4 id="5-分离式通信"><a href="#5-分离式通信" class="headerlink" title="(5)分离式通信"></a>(5)分离式通信</h4><strong>充分挖掘系统总线每个瞬间的潜力</strong><br>一个总线的传输周期</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;cases&#125;</span><br><span class="line">\text&#123;子周期1&#125;&amp;</span><br><span class="line">\text&#123;&#123;\bf&#123;主模块&#125;&#125;申请&#123;\bf&#123;占用总线&#125;&#125;，使用完后即&#123;\bf&#123;放弃总线&#125;&#125;的使用权&#125;\\</span><br><span class="line">\text&#123;子周期2&#125;&amp;</span><br><span class="line">\text&#123;&#123;\bf&#123;从模块&#125;&#125;申请&#123;\bf&#123;占用总线&#125;&#125;，将各种信息送至总线上&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br></pre></td></tr></table></figure><h5 id="分离式通信特点"><a href="#分离式通信特点" class="headerlink" title="分离式通信特点"></a>分离式通信特点</h5><ol><li>各模块有权申请占用总线</li><li>采用同步方式通信，不等对方回答</li><li>总线被占用时，无空闲</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;pre&quot;&gt;&lt;a href=&quot;#pre&quot; class=&quot;headerlink&quot; title=&quot;pre&quot;&gt;&lt;/a&gt;pre&lt;/h2&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="计算机组成原理" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机系统的基本概念与发展</title>
    <link href="http://yoursite.com/2017/11/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E5%8F%91%E5%B1%95/"/>
    <id>http://yoursite.com/2017/11/30/计算机系统的基本概念与发展/</id>
    <published>2017-11-30T05:24:20.000Z</published>
    <updated>2018-07-09T15:28:44.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pre"><a href="#pre" class="headerlink" title="pre"></a>pre</h2><blockquote></blockquote><a id="more"></a><h1 id="1-1计算机系统简介"><a href="#1-1计算机系统简介" class="headerlink" title="1.1计算机系统简介"></a>1.1计算机系统简介</h1><h2 id="一、计算机的软硬件概念"><a href="#一、计算机的软硬件概念" class="headerlink" title="一、计算机的软硬件概念"></a>一、计算机的软硬件概念</h2><h3 id="1、计算机系统"><a href="#1、计算机系统" class="headerlink" title="1、计算机系统"></a>1、计算机系统</h3><p><img src="/images/1-1计算机系统简介/computerSystem.png" alt=""></p><h2 id="二、计算机系统的层次结构"><a href="#二、计算机系统的层次结构" class="headerlink" title="二、计算机系统的层次结构"></a>二、计算机系统的层次结构</h2><p><img src="/images/1-1计算机系统简介/hard_software.png" alt=""></p><blockquote><ul><li><em>应对系统复杂性的方法1</em>————<strong>抽象</strong> <em>（隐藏不重要的细节）</em><blockquote><p>抽象就是把一个问题或模型，以不同规则或方法所得出的不同的解（求解方法和解本身即抽象层），这些不<br>同的解可以组合并还原成问题或模型的本身。<br>抽象的意义是可以忽略不是求解过程中必需的解。例如要用计算机程序去模拟“人”，在描述了人的动作（饮<br>食、思考、移动等）匹配设计要求后（如可完整表达“人”在坐下时候的动作），其他“人”的细节（躯干、<br>器官、细胞活动乃至人际关系）都可以忽略，以集中设计需要的功能，并减低程序的复杂度。<br><a href="https://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E5%8C%96_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8" target="_blank" rel="noopener">wiki抽象化 (计算机科学)</a>)</p></blockquote></li></ul></blockquote><p><img src="/images/1-1计算机系统简介/computerLayer01.png" alt=""><br><img src="/images/1-1计算机系统简介/computerLayer02.png" alt=""></p><h2 id="三、计算机体系结构与计算机组成"><a href="#三、计算机体系结构与计算机组成" class="headerlink" title="三、计算机体系结构与计算机组成"></a>三、计算机体系结构与计算机组成</h2><ul><li>计算机组成与计算机体系结构从研究内容上的区别</li></ul><table><thead><tr><th style="text-align:left">计算机组成</th><th style="text-align:left">计算机体系结构</th></tr></thead><tbody><tr><td style="text-align:left"></td><td style="text-align:left">研究内容：定义了软硬件交界面，定义了软硬件各自实现的功能</td></tr><tr><td style="text-align:left">定义：实现计算机体系结构所体现的属性（指令实现）</td><td style="text-align:left">定义：程序员（机器语言程序员）所见的计算机系统的属性概念性的结构和功能特性（指令系统、数据类型、寻址技术、I/O机理）</td></tr></tbody></table><h1 id="1-2计算机的基本组成"><a href="#1-2计算机的基本组成" class="headerlink" title="1.2计算机的基本组成"></a>1.2计算机的基本组成</h1><h2 id="一、冯诺依曼计算机的特点"><a href="#一、冯诺依曼计算机的特点" class="headerlink" title="一、冯诺依曼计算机的特点"></a>一、冯诺依曼计算机的特点</h2><p><strong>离散变量自动电子计算机</strong><br><strong>EDVAC</strong>（Electronic Discrete Variable Automatic Computer）</p><h3 id="冯诺依曼计算机硬件框图"><a href="#冯诺依曼计算机硬件框图" class="headerlink" title="冯诺依曼计算机硬件框图"></a>冯诺依曼计算机硬件框图</h3><p><img src="/images/1-2计算机的基本组成/von.png" alt=""><br>1.由五大部件组成</p><ul><li>控制器<br>– 指挥程序的运行</li><li>运算器<br>– 算术运算<br>– 逻辑运算</li><li>存储器<br>– 存放数据和程序</li><li>输入设备<br>– 将信息转换成机器能识别的形式</li><li>输出设备<br>– 将结果转换成人类能识别的形式</li></ul><p>2.指令和数据以同等地位存于存储器中，可按地址寻访<br>3.指令和数据用二进制表示<br>4.指令由操作码和地址码组成<br><strong>5.存储程序</strong>（核心）<br>6.以运算器为中心（系统瓶颈）</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>以运算器为中心</li><li>不具备层次结构<h2 id="二、计算机的硬件框图"><a href="#二、计算机的硬件框图" class="headerlink" title="二、计算机的硬件框图"></a>二、计算机的硬件框图</h2><h3 id="1-以存储器为中心的计算机硬件框图"><a href="#1-以存储器为中心的计算机硬件框图" class="headerlink" title="1.以存储器为中心的计算机硬件框图"></a>1.以存储器为中心的计算机硬件框图</h3><img src="/images/1-2计算机的基本组成/memoryCentre.png" alt=""><h3 id="2-现代计算机硬件框图"><a href="#2-现代计算机硬件框图" class="headerlink" title="2.现代计算机硬件框图"></a>2.现代计算机硬件框图</h3>现代计算机硬件层次<br><img src="/images/1-2计算机的基本组成/mordenComputer.png" alt=""><blockquote><p>ALU(Arithmetic Logic Unit)算数逻辑单元<br>CU(Control Unit)控制单元<br>CPU(Central Processing Unit)中央处理器</p></blockquote></li></ul><p>现代计算机硬件框图<br><img src="/images/1-2计算机的基本组成/mordenComputer02.png" alt=""></p><blockquote><ul><li><em>应对系统复杂性的方法2</em>————<strong>(3’y)</strong><br>–层次化（Hierachy)：将被设计系统划分多个模块或子模块<br>–模块化（Modularity）：明确定义（well-defind）的功能和接口<br>–规范化（Regularity）：模块更容易重用</li></ul></blockquote><h2 id="三、计算机的工作步骤"><a href="#三、计算机的工作步骤" class="headerlink" title="三、计算机的工作步骤"></a>三、计算机的工作步骤</h2><h3 id="1-上机前的准备"><a href="#1-上机前的准备" class="headerlink" title="1.上机前的准备"></a>1.上机前的准备</h3><ul><li>建立数学模型</li><li>确定计算方法</li><li><p>编制结题程序<br>–程序——运算所需的<strong>全部步骤</strong>,由指令构成<br>–指令——每<strong>一个步骤</strong><br>–指令和数据都保存在存储器中</p><blockquote><p>指令格式举例<br>| 操作码 | 地址码 |<br>| :—: | :—: |<br>| 取数 | a |<br>| 000001 | 0000001000 |</p></blockquote><h3 id="2-计算机的解题过程（模型机）"><a href="#2-计算机的解题过程（模型机）" class="headerlink" title="2.计算机的解题过程（模型机）"></a>2.计算机的解题过程（模型机）</h3><h4 id="1-存储器的基本组成"><a href="#1-存储器的基本组成" class="headerlink" title="(1)存储器的基本组成"></a>(1)存储器的基本组成</h4><p><img src="/images/1-2计算机的基本组成/memory.png" alt=""><br>存储体——存储单元——存储元件<br><strong>存储单元</strong>　存放一串二进制代码<br><strong>存储字</strong>　存储单元中二进制代码的组合<br><strong>存储字长</strong>　存储单元中二进制代码的位数,每一个存储单元赋予一个地址<br><strong>按地址寻访</strong><br><strong>MAR(Memory Address Register)</strong>　存储器地址寄存器,反映存储单元的个数<br><strong>MDR(Memory Data Register)</strong>　存储器数据寄存器，反映存储字长</p><h4 id="2-运算器的基本组成及操作过程"><a href="#2-运算器的基本组成及操作过程" class="headerlink" title="(2)运算器的基本组成及操作过程"></a>(2)运算器的基本组成及操作过程</h4><p><img src="/images/1-2计算机的基本组成/alu.png" alt=""><br>|  ＊ | ACC | MQ|  X  |<br>|:—:|:—:|:—:|:—:|<br>| 加 | 被加数、和 | | 加数 |<br>| 减| 被减数、差| | 减数|<br>| 乘| 乘积高位| 乘数、乘积低位| 被乘数|<br>| 除| 被除数、余数| 商| 除数|</p><blockquote><p><strong>ACC(Accumulator)</strong>　累加器<br><strong>MQ(Multiple—Quotient Register)</strong> 存放乘数与商，称为<em>乘商寄存器</em></p></blockquote></li><li><h5 id="加法操作过程"><a href="#加法操作过程" class="headerlink" title="加法操作过程"></a>加法操作过程</h5><blockquote><p>指令<br>| 加 | M |<br>|:-:|:-:|<br>初态　ACC　被加数<br>[M]–&gt;X<br>[ACC]+[M]–&gt;ACC</p></blockquote></li><li><h5 id="减法操作过程"><a href="#减法操作过程" class="headerlink" title="减法操作过程"></a>减法操作过程</h5><blockquote><p>指令<br>| 减 | M |<br>|:-:|:-:|<br>初态　ACC　被减数<br>[M]–&gt;X<br>[ACC]-[M]–&gt;ACC</p></blockquote></li><li><h5 id="乘法操作过程"><a href="#乘法操作过程" class="headerlink" title="乘法操作过程"></a>乘法操作过程</h5><blockquote><p>指令<br>| 乘 | M |<br>|:-:|:-:|<br>初态　ACC　被乘数<br>[M]–&gt;MQ<br>[ACC]–&gt;Ｘ<br>0–&gt;ACC<br>[X]×[MQ]–&gt;ACC // MQ <em>(//表示连接关系)</em></p></blockquote></li><li><h5 id="加法操作过程-1"><a href="#加法操作过程-1" class="headerlink" title="加法操作过程"></a>加法操作过程</h5><blockquote><p>指令<br>| 除 | M |<br>|:-:|:-:|<br>初态　ACC　被除数<br>[M]–&gt;X<br>[ACC]÷[M]–&gt;MQ…ACC(余数)</p></blockquote><h4 id="3-控制器的基本组成"><a href="#3-控制器的基本组成" class="headerlink" title="(3)控制器的基本组成"></a>(3)控制器的基本组成</h4><blockquote><p>控制器的功能<br>√解释指令<br>√保证指令按序执行</p></blockquote></li></ul><p><img src="/images/1-2计算机的基本组成/completeAInstruct.png" alt=""><br><strong>PC(Program Counter)</strong> 程序计数器，存放当前欲执行的指令的地址<br><strong>IR(Instruction Register)</strong> 指令寄存器，存放当前欲执行的指令<br><strong>CU(Control Unit)</strong>　控制单元<br><img src="/images/1-2计算机的基本组成/controller.png" alt=""></p><h4 id="4-主机完成一条指令的过程"><a href="#4-主机完成一条指令的过程" class="headerlink" title="(4)主机完成一条指令的过程"></a>(4)主机完成一条指令的过程</h4><h5 id="以取数指令为例"><a href="#以取数指令为例" class="headerlink" title="以取数指令为例"></a>以取数指令为例</h5><p><img src="/images/1-2计算机的基本组成/getNum.png" alt=""></p><blockquote><p>1.PC将指令地址送给MAR<br>2.MAR送给存储体<br>3.存储体将取数指令送到MDR中<br>4.MDR中的指令送到IR<br>5.将IR中的操作码送入CU<br>6.将IR中的地址码送入MAR<br>7.MAR将地址码送给存储体<br>8.存储体将操作数送到MDR中<br>9.MDR将操作数送入ACC</p></blockquote><h4 id="5-ax-2-bx-c程序的运行过程"><a href="#5-ax-2-bx-c程序的运行过程" class="headerlink" title="(5)ax^2+bx+c程序的运行过程"></a>(5)ax^2+bx+c程序的运行过程</h4><ul><li>将程序通过输入设备送至计算机</li><li>程序首地址–&gt;PC</li><li>启动程序运行</li><li>取指令PC–&gt;MAR–&gt;M–&gt;MDR–&gt;IR，(PC)+1–&gt;PC</li><li>分析指令OP(IR)–&gt;CU</li><li><blockquote><p>OP(IR)表示IR中的操作码</p></blockquote></li><li>执行指令Ad(IR)–&gt;MAR–&gt;M–&gt;MDR–&gt;ACC</li><li><blockquote><p>Ad(IR)表示IR中的地址码</p></blockquote></li><li>…</li><li>打印结果<h1 id="1-3计算机硬件的主要技术指标"><a href="#1-3计算机硬件的主要技术指标" class="headerlink" title="1.3计算机硬件的主要技术指标"></a>1.3计算机硬件的主要技术指标</h1><h2 id="计算机硬件的主要技术指标"><a href="#计算机硬件的主要技术指标" class="headerlink" title="计算机硬件的主要技术指标"></a>计算机硬件的主要技术指标</h2><h3 id="1机器字长"><a href="#1机器字长" class="headerlink" title="1机器字长"></a>1机器字长</h3>CPU一次能处理的数据的位数与CPU中的<strong>寄存器</strong>有关<h4 id="2-运算速度"><a href="#2-运算速度" class="headerlink" title="2.运算速度"></a>2.运算速度</h4><em>主频</em><br><em>核数，每个核支持的线程数</em><br><em>吉普森法</em>$$T_M=\sum^n_{i=1} f_it_i$$<blockquote><p>f为指令频率，t为指令时间</p></blockquote><em>CPI</em>执行一条指令所需的时钟周期数<br><em>MIPS</em>每秒执行百万条指令数<br><em>FLOPS</em>每秒浮点运算数<h4 id="3-存储容量"><a href="#3-存储容量" class="headerlink" title="3.存储容量"></a>3.存储容量</h4>存放二进制信息的总位数<br><strong>主存容量</strong></li><li>存储单元个数×存储字长<br>–MAR×MDR<br>–$10\times8$ –&gt; $1K\times8$位<br>–$16\times32$ –&gt; $62K\times32$位</li><li>字节数<br>–$2^{13}b$ –&gt; 1KB<br>–$2^{21}b$ –&gt; 256KB</li></ul><p><strong>辅存容量</strong></p><ul><li>字节数<br>–80GB<blockquote><p>$1K=2^{10}$<br>$1B=2^3b$<br>$1GB=2^{30}B$</p></blockquote><h1 id="2-1计算机的发展史"><a href="#2-1计算机的发展史" class="headerlink" title="2.1计算机的发展史"></a>2.1计算机的发展史</h1><h2 id="一、计算机的产生和发展"><a href="#一、计算机的产生和发展" class="headerlink" title="一、计算机的产生和发展"></a>一、计算机的产生和发展</h2><blockquote><p>1946年 美国ENIAC<br>十进制运算<br>| | |<br>|:—|:—|<br>| 18 000 | 多个电子管|<br>| 1 500 | 多个继电器|<br>| 150| 千瓦|<br>| 30 | 吨|<br>| 1 500| 平方英尺|<br>| 5 000| 次加法/秒|<br>手工扳动开关和插拔电缆来编程</p></blockquote></li></ul><h3 id="现代计算机产生的驱动力"><a href="#现代计算机产生的驱动力" class="headerlink" title="现代计算机产生的驱动力"></a>现代计算机产生的驱动力</h3><ul><li>需求、需求、以及需求</li><li>技术发展<br>–电子技术的发展<br>–计算机体系结构技术的发展<h3 id="硬件技术对计算机更新换代的影响"><a href="#硬件技术对计算机更新换代的影响" class="headerlink" title="硬件技术对计算机更新换代的影响"></a>硬件技术对计算机更新换代的影响</h3>| 代 |   时间    |     硬件技术     | 速度(次/秒) |<br>|:–:|:———:|:—————-:|:———–:|<br>| 一 | 1946-1957 |      电子管      |   40 000    |<br>| 二 | 1958-1964 |      晶体管      |   200 000   |<br>| 三 | 1965-1971 | 中小规模集成电路 |  1 000 000  |<br>| 四 | 1972-1977 |  大规模集成电路  | 10 000 000  |<br>| 五 | 1978-现在 | 超大规模集成电路 | 100 000 000 |</li></ul><h4 id="IBM-System-360"><a href="#IBM-System-360" class="headerlink" title="IBM System/360"></a>IBM System/360</h4><h2 id="二、微型计算机的出现和发展"><a href="#二、微型计算机的出现和发展" class="headerlink" title="二、微型计算机的出现和发展"></a>二、微型计算机的出现和发展</h2><p>微处理器芯片 1971年<br>存储器芯片 1970年</p><h3 id="More定律"><a href="#More定律" class="headerlink" title="More定律"></a>More定律</h3><blockquote><blockquote><p>Gordon Moore——Intel公司的缔造者之一</p></blockquote><p>内容为:<strong>集成电路上可容纳的晶体管数目，约每隔两年便会增加一倍</strong></p><ul><li><em>经常被引用的“18个月”，是由英特尔首席执行官大卫·豪斯（David House）所说：预计18个月会将芯片的性能提高一倍（即更多的晶体管使其更快）。</em></li><li><em>这是一个观测或推测,而非物理或自然法则</em></li><li><em>2010年国际半导体技术发展路线图的更新增长已经在2013年年底放缓；又比如说英特尔在22奈米跟14奈米的CPU制程上已经放慢了技术更新的脚步，之后的时间里，晶体管数量密度预计只会每三年增加一倍。</em></li></ul><p><a href="https://zh.wikipedia.org/wiki/%E6%91%A9%E5%B0%94%E5%AE%9A%E5%BE%8B" target="_blank" rel="noopener">维基百科-摩尔定律</a></p></blockquote><h2 id="三、软件技术的兴起和发展"><a href="#三、软件技术的兴起和发展" class="headerlink" title="三、软件技术的兴起和发展"></a>三、软件技术的兴起和发展</h2><h3 id="1-各种语言"><a href="#1-各种语言" class="headerlink" title="1.各种语言"></a>1.各种语言</h3><p>机器语言 -&gt; 面向机器<br>汇编语言 -&gt; 面向机器<br>高级语言 -&gt; 面向问题</p><h3 id="2-系统软件"><a href="#2-系统软件" class="headerlink" title="2.系统软件"></a>2.系统软件</h3><p>语言处理程序: 汇编程序 编译程序 解释程序<br>操作系统: DOS、UNIX、Windows、Linux<br>服务器性程序<br>数据库管理系统<br>网络软件</p><h3 id="3-软件发展的特点"><a href="#3-软件发展的特点" class="headerlink" title="3.软件发展的特点"></a>3.软件发展的特点</h3><p>(1).开发周期长<br>(2).制作成本昂贵<br>(3).检测软件产品质量的特殊性</p><blockquote><p>软件是程序及<em>开发</em>、<em>使用</em> 和 <em>维护</em> 程序所需的所有<em>文档</em></p></blockquote><h1 id="2-2计算机的应用"><a href="#2-2计算机的应用" class="headerlink" title="2.2计算机的应用"></a>2.2计算机的应用</h1><h4 id="一、科学计算和数据处理"><a href="#一、科学计算和数据处理" class="headerlink" title="一、科学计算和数据处理"></a>一、科学计算和数据处理</h4><p>科学计算</p><ul><li>核爆模拟</li><li>行星模型</li><li>…</li></ul><p>数据处理</p><ul><li>民航</li><li>银行</li><li>…<h4 id="二、工业控制和实时控制"><a href="#二、工业控制和实时控制" class="headerlink" title="二、工业控制和实时控制"></a>二、工业控制和实时控制</h4>实时控制</li><li>无人驾驶</li><li>…<h4 id="三、网络技术"><a href="#三、网络技术" class="headerlink" title="三、网络技术"></a>三、网络技术</h4>1.电子商务<br>2.网络教育<br>3.敏捷制造<h4 id="四、虚拟现实"><a href="#四、虚拟现实" class="headerlink" title="四、虚拟现实"></a>四、虚拟现实</h4><h4 id="五、办公自动化和管理信息系统"><a href="#五、办公自动化和管理信息系统" class="headerlink" title="五、办公自动化和管理信息系统"></a>五、办公自动化和管理信息系统</h4><h4 id="六、CAD、CAM、CIMS"><a href="#六、CAD、CAM、CIMS" class="headerlink" title="六、CAD、CAM、CIMS"></a>六、CAD、CAM、CIMS</h4>计算机辅助设计<br>计算机辅助制造<br>计算机集成制造系统<h4 id="七、多媒体技术"><a href="#七、多媒体技术" class="headerlink" title="七、多媒体技术"></a>七、多媒体技术</h4><h4 id="八、人工只能"><a href="#八、人工只能" class="headerlink" title="八、人工只能"></a>八、人工只能</h4><h1 id="2-3计算机的展望"><a href="#2-3计算机的展望" class="headerlink" title="2.3计算机的展望"></a>2.3计算机的展望</h1><h4 id="一、计算机具有类似人脑的一些超级智能功能"><a href="#一、计算机具有类似人脑的一些超级智能功能" class="headerlink" title="一、计算机具有类似人脑的一些超级智能功能"></a>一、计算机具有类似人脑的一些超级智能功能</h4>要求计算机的速度足够快<h4 id="二、芯片集成度的提高受一下三方面的限制"><a href="#二、芯片集成度的提高受一下三方面的限制" class="headerlink" title="二、芯片集成度的提高受一下三方面的限制"></a>二、芯片集成度的提高受一下三方面的限制</h4></li><li>芯片集成度点后物理极限的制约</li><li>按几何级数递增的制作成本</li><li>芯片的功耗、散热、线延迟<h4 id="三、？替代传统的硅芯片"><a href="#三、？替代传统的硅芯片" class="headerlink" title="三、？替代传统的硅芯片"></a>三、？替代传统的硅芯片</h4><h5 id="1-光计算机"><a href="#1-光计算机" class="headerlink" title="1.光计算机"></a>1.光计算机</h5>利用光子取代电子进行运算和存储<h5 id="2-DNA生物计算机"><a href="#2-DNA生物计算机" class="headerlink" title="2.DNA生物计算机"></a>2.DNA生物计算机</h5>通过控制DNA分子间的生化反应<h5 id="3-量子计算机"><a href="#3-量子计算机" class="headerlink" title="3.量子计算机"></a>3.量子计算机</h5>利用量子所具有的量子特性</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;pre&quot;&gt;&lt;a href=&quot;#pre&quot; class=&quot;headerlink&quot; title=&quot;pre&quot;&gt;&lt;/a&gt;pre&lt;/h2&gt;&lt;blockquote&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="计算机组成原理" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
</feed>
